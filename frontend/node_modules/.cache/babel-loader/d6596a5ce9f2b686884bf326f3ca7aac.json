{"remainingRequest":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\src\\api\\index.js","dependencies":[{"path":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\src\\api\\index.js","mtime":1652297497485},{"path":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\babel.config.js","mtime":1651070739555},{"path":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652197444768},{"path":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1652197445501},{"path":"C:\\Users\\Jian Gao\\Desktop\\ELEN 6883\\Project\\Huygens(1)\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1652197444995}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Jian Gao/Desktop/ELEN 6883/Project/Huygens(1)/frontend/src/api/index.js"],"names":["contract","store","Mcp","NFTtoken","require","Myerc20","Big","McpFunc","Contract","setProvider","getName","Instance","methods","name","call","getSymbol","symbol","mint","console","log","getbalanceOf","coreAddress","response","balanceOf","response1","approvemoney","limit","toaccount","approveAmount","times","toString","mycontract","abi","deploy","data","bytecode","arguments","transfer","sendToBlock","from","state","dapp","account","amount","success","getCreator","originalAddress","approve","tokenId"],"mappings":"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","sourcesContent":["import contract from '../contract';\nimport store from '../store'\nimport Mcp from \"../mcp\";\nconst NFTtoken = require(\"../NFTtoken.json\");\nconst Myerc20 = require(\"../Myerc20.json\");\nimport Big from 'bignumber.js'\nconst McpFunc = new Mcp();\n\nMcpFunc.Contract.setProvider(\"http://13.212.177.203:8765\");\nexport default {\n    async getName() {\n        return await contract.Instance.methods.name().call();\n    },\n    async getSymbol() {\n        return await contract.Instance.methods.symbol().call();\n    },\n    \n    async mint() {\n\t\t\t\tconsole.log(\"mint()\");\n        return await contract.Instance.methods.mint().call();\n    },\n     async getbalanceOf(coreAddress) {\n\t\t\t\tconst  response=await contract.Instance.methods.name().call();\n\t\t\t\tconsole.log('getbalanceOf(response)',response);\n\t\t\t\tconst response1= await contract.Instance.methods.balanceOf(coreAddress).call(coreAddress);\n        console.log('getbalanceOf(response)',response1);\n        return response;\n    },\n   \n\n    async approvemoney(coreAddress,limit,toaccount) {\n        const approveAmount = new Big(limit).times('1e18').toString();\n        console.log('coreAddress',coreAddress);\n        console.log('toaccount',toaccount);\n        const mycontract = new McpFunc.Contract(\n        Myerc20.abi,\n        toaccount\n        );\n       mycontract.deploy({\n\t\t\t\t\tdata: Myerc20.bytecode,\n\t\t\t\t\targuments: []\n\t\t\t\t\t});\n      \n        \n    \n        const response = await mycontract.methods.transfer(coreAddress, approveAmount).sendToBlock({\n            from: store.state.dapp.account,\n            amount: new Big(approveAmount).toString(),                  \n        });\n        if (response.success) {\n            console.log('transaction success: ', response);\n        } else {\n            console.log('transaction failed: ', response);\n        }\n\n        return response;\n    },\n    async getCreator(account) {\n       \n        const mycontract = new McpFunc.Contract(\n            NFTtoken.abi,\n            account\n            );\n        mycontract.deploy({\n            data: NFTtoken.bytecode,\n            arguments: []\n            });\n        \n        const response = mycontract.originalAddress.toString();\n        // console.log(\"%s\", mycontract.originalAddress);\n        return response;\n    },\n    async approve(coreAddress,limit,toaccount,tokenId) {\n        const approveAmount = new Big(limit).times('1e18').toString();\n        console.log('approveAmount',approveAmount);\n        console.log('coreAddress',coreAddress);\n        console.log('toaccount',toaccount);\n        const mycontract = new McpFunc.Contract(\n        NFTtoken.abi,\n        toaccount\n        );\n         mycontract.deploy({\n\t\t\t\t\tdata: NFTtoken.bytecode,\n\t\t\t\t\targuments: []\n\t\t\t\t\t});\n     \n        await mycontract.methods.mint().call();\n        const response = await mycontract.methods.transfer(coreAddress, tokenId).sendToBlock({\n            from: store.state.dapp.account,\n            amount: new Big(approveAmount).toString(),                  \n        });\n        if (response.success) {\n            console.log('transaction success: ', response);\n        } else {\n            console.log('transaction failed: ', response);\n        }\n\n        return response;\n    }\n}"]}]}